# Kind cluster configuration for RKE2 testing
# This creates a multi-node cluster that simulates a realistic deployment environment
kind: Cluster
apiVersion: kind.x-k8s.io/v1alpha4
name: rke2-test
nodes:
  # Control plane node
  - role: control-plane
    image: kindest/node:v1.29.0@sha256:eaa1450915475849a73a9227b8f201df25e55e268e5d619312131292e324d570
    kubeadmConfigPatches:
    - |
      kind: InitConfiguration
      nodeRegistration:
        kubeletExtraArgs:
          node-labels: "node-type=controller"
    extraMounts:
      # Mount for testing storage components
      - hostPath: /tmp/kind-storage
        containerPath: /mnt/storage
    extraPortMappings:
      # Expose common ports for testing
      - containerPort: 80
        hostPort: 8080
        protocol: TCP
      - containerPort: 443
        hostPort: 8443
        protocol: TCP

  # Worker node 1
  - role: worker
    image: kindest/node:v1.29.0@sha256:eaa1450915475849a73a9227b8f201df25e55e268e5d619312131292e324d570
    kubeadmConfigPatches:
    - |
      kind: JoinConfiguration
      nodeRegistration:
        kubeletExtraArgs:
          node-labels: "node-type=worker"
    extraMounts:
      - hostPath: /tmp/kind-storage
        containerPath: /mnt/storage

  # Worker node 2
  - role: worker
    image: kindest/node:v1.29.0@sha256:eaa1450915475849a73a9227b8f201df25e55e268e5d619312131292e324d570
    kubeadmConfigPatches:
    - |
      kind: JoinConfiguration
      nodeRegistration:
        kubeletExtraArgs:
          node-labels: "node-type=worker"
    extraMounts:
      - hostPath: /tmp/kind-storage
        containerPath: /mnt/storage

networking:
  # Disable default CNI to test CNI installation
  disableDefaultCNI: false
  # Set pod and service subnets
  podSubnet: "10.244.0.0/16"
  serviceSubnet: "10.96.0.0/16"