# SPDX-License-Identifier: GPL-3.0-or-later
---
dependency:
  name: galaxy
  options:
    requirements-file: requirements.yml

driver:
  name: docker

platforms:
  - name: controller-1
    image: geerlingguy/docker-ubuntu2404-ansible:latest
    pre_build_image: true
    privileged: true
    volumes:
      - /sys/fs/cgroup:/sys/fs/cgroup:rw
    cgroupns_mode: host
    command: "/lib/systemd/systemd"
    tmpfs:
      - /run
      - /tmp
    capabilities:
      - SYS_ADMIN
    groups:
      - controllers
      - rke2
    networks:
      - name: rke2-network

  - name: agent-1
    image: geerlingguy/docker-ubuntu2404-ansible:latest
    pre_build_image: true
    privileged: true
    volumes:
      - /sys/fs/cgroup:/sys/fs/cgroup:rw
    cgroupns_mode: host
    command: "/lib/systemd/systemd"
    tmpfs:
      - /run
      - /tmp
    capabilities:
      - SYS_ADMIN
    groups:
      - agents
      - rke2
    networks:
      - name: rke2-network

provisioner:
  name: ansible
  inventory:
    group_vars:
      all:
        ansible_user: root
        # Basic RKE2 configuration for integration testing
        rke2_version: "v1.33.3+rke2r1"
        vip: "192.168.100.30"
        vip_interface: "eth0"
        lb_range: "192.168.100.50-192.168.100.60"
        management_network: "192.168.0.0/16"
        
        # Disable actual installation in containers
        skip_rke2_installation: true
        skip_firewall_configuration: true
        
        # Component versions
        helm_version: "v3.18.4"
        kube_vip_version: "v0.8.14"
        metallb_version: "0.15.0"
  
  config_options:
    defaults:
      interpreter_python: auto_silent
      callback_whitelist: profile_tasks, timer, yaml
      stdout_callback: yaml
    ssh_connection:
      pipelining: false

verifier:
  name: ansible

scenario:
  test_sequence:
    - dependency
    - cleanup
    - destroy
    - syntax
    - create
    - prepare
    - converge
    - idempotence
    - verify
    - cleanup
    - destroy