---
- name: Create CephCluster Custom Resource
  kubernetes.core.k8s:
    state: present
    definition:
      apiVersion: ceph.rook.io/v1
      kind: CephCluster
      metadata:
        name: rook-ceph
        namespace: "{{ rook_ceph_namespace }}"
      spec:
        cephVersion:
          image: "quay.io/ceph/ceph:{{ rook_ceph_version }}"
        dataDirHostPath: /var/lib/rook
        mon:
          count: "{{ rook_ceph_mon_count }}"
          allowMultiplePerNode: false
          tolerations:
            - key: "CriticalAddonsOnly"
              operator: "Exists"
              effect: "NoSchedule"
        dashboard:
          enabled: true
        network:
          hostNetwork: false
        storage:
          useAllNodes: true
          useAllDevices: true
          config:
            minDeviceCapacity: "{{ rook_ceph_min_device_capacity }}"
            databaseSizeMB: "1024"
            journalSizeMB: "1024"
        crashCollector:
          disable: false
        resources:
          mgr:
            limits:
              cpu: "500m"
              memory: "512Mi"
            requests:
              cpu: "100m"
              memory: "128Mi"
  tags: rook_cluster

- name: Create CephBlockPool
  kubernetes.core.k8s:
    state: present
    definition:
      apiVersion: ceph.rook.io/v1
      kind: CephBlockPool
      metadata:
        name: "{{ rook_ceph_pool_name }}"
        namespace: "{{ rook_ceph_namespace }}"
      spec:
        replicated:
          size: "{{ rook_ceph_replica_size }}"
        failureDomain: host
  tags: rook_cluster

- name: Create Rook Ceph StorageClass
  kubernetes.core.k8s:
    state: present
    definition:
      apiVersion: storage.k8s.io/v1
      kind: StorageClass
      metadata:
        name: "{{ rook_ceph_storage_class_name }}"
      provisioner: rook-ceph.rbd.csi.ceph.com
      parameters:
        clusterID: "{{ rook_ceph_namespace }}"
        pool: "{{ rook_ceph_pool_name }}"
        imageFormat: "2"
        imageFeatures: layering
        csi.storage.k8s.io/fstype: ext4
      reclaimPolicy: Delete
      allowVolumeExpansion: true
      volumeBindingMode: Immediate
  tags: rook_cluster

- name: Gather all StorageClasses
  community.kubernetes.k8s_info:
    api_version: storage.k8s.io/v1
    kind: StorageClass
  register: all_storageclasses
  when: rook_ceph_make_storage_class_default | bool
  tags: rook_cluster

- name: Remove 'default' annotation from other StorageClasses
  community.kubernetes.k8s:
    api_version: storage.k8s.io/v1
    kind: StorageClass
    name: "{{ item.metadata.name }}"
    definition:
      metadata:
        annotations:
          storageclass.kubernetes.io/is-default-class: "false"
  loop: "{{ all_storageclasses.resources }}"
  when:
    - rook_ceph_make_storage_class_default | bool
    - item.metadata.name != rook_ceph_storage_class_name
    - item.metadata.annotations['storageclass.kubernetes.io/is-default-class'] | default('false') == 'true'
  tags: rook_cluster

- name: Patch StorageClass to set as default
  kubernetes.core.k8s:
    api_version: storage.k8s.io/v1
    kind: StorageClass
    name: "{{ rook_ceph_storage_class_name }}"
    definition:
      metadata:
        annotations:
          storageclass.kubernetes.io/is-default-class: "true"
  when: rook_ceph_make_storage_class_default | bool
  tags: rook_cluster
