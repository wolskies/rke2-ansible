# SPDX-License-Identifier: GPL-3.0-or-later
---
- name: Validate system requirements
  ansible.builtin.assert:
    that:
      - ansible_distribution in supported_distributions
      - ansible_distribution_major_version | int >= min_os_versions[ansible_distribution] | int
    fail_msg: >
      Unsupported OS: {{ ansible_distribution }} {{ ansible_distribution_version }}.
      Minimum required: {{ ansible_distribution }} {{ min_os_versions[ansible_distribution] | default('Unknown') }}
  tags: version-check

- name: Register machine architecture
  ansible.builtin.set_fact:
    normalized_arch: >-
      {{ 'amd64' if ansible_architecture == 'x86_64'
        else 'arm64' if ansible_architecture == 'aarch64'
        else ansible_architecture }}

- name: Generate RKE2 binary url
  ansible.builtin.set_fact:
    rke2_binary_url: "{{ rke2_binary_root }}/{{ rke2_version }}/rke2.{{ rke2_os }}-{{ normalized_arch }}"

- name: Prepare nodes
  ansible.builtin.include_tasks:
    file: prepare-nodes.yaml
  tags: config-firewall

- name: Ensure RKE2 binary installed
  tags: rke2
  block:
    - name: Create directory for RKE2 binary
      ansible.builtin.file:
        path: "{{ rke2_install_dir }}"
        state: directory
        mode: '0755'

    - name: Download RKE2 binary
      ansible.builtin.get_url:
        url: "{{ rke2_binary_url }}"
        dest: "{{ rke2_install_dir }}/rke2"
        mode: '0755'


- name: Ensure kube-vip manifest present
  ansible.builtin.include_tasks:
    file: kube-vip-manifest.yaml
  when: rke2_install_kubevip
  tags: [kube-vip, rke2-network]

- name: Configure and start RKE2 nodes
  tags: rke2
  block:
    - name: Create directory for RKE2 config
      ansible.builtin.file:
        path: "/etc/rancher/rke2"
        state: directory
        mode: '0755'

    - name: Create directory for RKE2 token
      ansible.builtin.file:
        path: "/var/lib/rancher/rke2/server"
        state: directory
        mode: '0755'

    - name: Bootstrap first server
      ansible.builtin.include_tasks:
        file: initial-bootstrap.yaml
      when: inventory_hostname in groups['controllers']
      tags: [rke2-bootstrap]

    - name: Add additional RKE2 Servers
      ansible.builtin.include_tasks:
        file: add-servers.yaml
      when: inventory_hostname in groups['controllers']
      tags: [rke2-servers]

    - name: Add additional RKE2 agents
      ansible.builtin.include_tasks:
        file: add-agents.yaml
      when: inventory_hostname in groups['agents']
      tags: [rke2-agents]

- name: Install and configure MetalLB
  ansible.builtin.include_tasks:
    file: metallb.yaml
  when: inventory_hostname == groups['controllers'][0] and rke2_install_metallb
  tags: [metallb, rke2-network]
