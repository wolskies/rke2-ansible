# SPDX-License-Identifier: GPL-3.0-or-later
---
- name: Ensure supported architecture
  tags: version-check
  block:
    - name: Fail when distribution unsupported
      ansible.builtin.fail:
        msg: "Unsupported distribution {{ ansible_distribution }}. Supported: {{ supported_os_versions.keys() | list }}"
      when: ansible_distribution not in supported_os_versions

    - name: Fail when version unsupported
      ansible.builtin.fail:
        msg: >
          Unsupported version {{ ansible_distribution_version }} for {{ ansible_distribution }}.
          Allowed: {{ supported_os_versions[ansible_distribution] }}
      when: ansible_distribution_version not in supported_os_versions[ansible_distribution]

- name: Register machine architecture
  ansible.builtin.set_fact:
    normalized_arch: >-
      {{ 'amd64' if ansible_architecture == 'x86_64'
        else 'arm64' if ansible_architecture == 'aarch64'
        else ansible_architecture }}

- name: Generate RKE2 binary url
  ansible.builtin.set_fact:
    rke2_binary_url: "{{ rke2_binary_root }}/{{ rke2_version }}/rke2.{{ rke2_os }}-{{ normalized_arch }}"

- name: Prepare nodes
  ansible.builtin.include_tasks:
    file: prepare-nodes.yaml
  when: not (skip_firewall_configuration | default(false))
  tags: config-firewall

- name: Display node preparation (test mode)
  ansible.builtin.debug:
    msg:
      - "Node preparation would configure:"
      - "- Firewall rules for RKE2"
      - "- Network interface configuration"
      - "- System prerequisites"
  when: skip_firewall_configuration | default(false)
  tags: config-firewall

- name: Ensure RKE2 binary installed
  tags: rke2
  when: not (skip_rke2_installation | default(false))
  block:
    - name: Create directory for RKE2 binary
      ansible.builtin.file:
        path: "{{ rke2_install_dir }}"
        state: directory
        mode: '0755'

    - name: Download RKE2 binary
      ansible.builtin.get_url:
        url: "{{ rke2_binary_url }}"
        dest: "{{ rke2_install_dir }}/rke2"
        mode: '0755'

    - name: Set executable permissions on the RKE2 binary
      ansible.builtin.file:
        path: "{{ rke2_install_dir }}/rke2"
        mode: '0755'
        state: file

- name: Display RKE2 binary installation (test mode)
  ansible.builtin.debug:
    msg:
      - "RKE2 binary would be installed:"
      - "Version: {{ rke2_version }}"
      - "URL: {{ rke2_binary_url }}"
      - "Install directory: {{ rke2_install_dir }}"
  when: skip_rke2_installation | default(false)
  tags: rke2

- name: Ensure kube-vip manifest present
  ansible.builtin.include_tasks:
    file: kube-vip-manifest.yaml
  when:
    - rke2_install_kubevip | default(true)
    - not kube_vip_noinstall
    - not (skip_kube_vip_installation | default(false))
  tags: [kube-vip, rke2-network]

- name: Display kube-vip configuration (test mode)
  ansible.builtin.debug:
    msg:
      - "Kube-vip would be configured:"
      - "VIP: {{ vip }}"
      - "Interface: {{ vip_interface }}"
      - "Version: {{ kube_vip_version }}"
  when: skip_kube_vip_installation | default(false)
  tags: [kube-vip, rke2-network]

- name: Configure and start RKE2 nodes
  tags: rke2
  when: not (skip_rke2_installation | default(false))
  block:
    - name: Create directory for RKE2 config
      ansible.builtin.file:
        path: "/etc/rancher/rke2"
        state: directory
        mode: '0644'

    - name: Create directory for RKE2 token
      ansible.builtin.file:
        path: "/var/lib/rancher/rke2/server"
        state: directory
        mode: '0644'

    - name: Bootstrap first server
      ansible.builtin.include_tasks:
        file: initial-bootstrap.yaml
      when: inventory_hostname in groups['controllers']
      tags: [rke2-bootstrap]

    - name: Add additional RKE2 Servers
      ansible.builtin.include_tasks:
        file: add-servers.yaml
      when: inventory_hostname in groups['controllers']
      tags: [rke2-servers]

    - name: Add additional RKE2 agents
      ansible.builtin.include_tasks:
        file: add-agents.yaml
      when: inventory_hostname in groups['agents']
      tags: [rke2-agents]

- name: Display RKE2 cluster configuration (test mode)
  ansible.builtin.debug:
    msg:
      - "RKE2 cluster would be configured:"
      - "Controllers: {{ groups['controllers'] | length if 'controllers' in groups else 0 }}"
      - "Agents: {{ groups['agents'] | length if 'agents' in groups else 0 }}"
      - >
        Current node role:
        {{ 'controller' if inventory_hostname in groups.get('controllers', [])
        else 'agent' if inventory_hostname in groups.get('agents', [])
        else 'unknown' }}
  when: skip_rke2_installation | default(false)
  tags: rke2

- name: Install and configure MetalLB
  ansible.builtin.include_tasks:
    file: metallb.yaml
  when:
    - inventory_hostname in groups['controllers'][0]
    - rke2_install_metallb | default(true)
    - not metallb_noinstall
    - not (skip_metallb_installation | default(false))
  tags: [metallb, rke2-network]

- name: Display MetalLB configuration (test mode)
  ansible.builtin.debug:
    msg:
      - "MetalLB would be configured:"
      - "Version: {{ metallb_version }}"
      - "Load balancer range: {{ lb_range }}"
      - "Pool name: {{ lb_pool_name }}"
  when:
    - skip_metallb_installation | default(false)
    - inventory_hostname in groups['controllers'][0]
  tags: [metallb, rke2-network]

# - name: Configure Calico GlobalNetworkPolicy
# ansible.builtin.include_tasks:
# file: calico-firewall.yaml
#   when: firewall == "calico"
