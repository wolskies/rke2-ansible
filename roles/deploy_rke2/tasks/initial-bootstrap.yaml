# SPDX-License-Identifier:  	GPL-3.0-or-later
---
- name: Bootstrap primary server
  when: inventory_hostname == groups['controllers'][0]
  block:
    - name: Deploy RKE2 server Configuration
      ansible.builtin.template:
        src: templates/rke2-server-config.j2
        dest: /etc/rancher/rke2/config.yaml
        owner: root
        group: root
        mode: "0644"

    - name: Create systemd service file for RKE2 server
      ansible.builtin.template:
        src: templates/rke2-server.service.j2
        dest: /etc/systemd/system/rke2-server.service
        owner: root
        group: root
        mode: "0644"

    - name: Ensure RKE2 server is enabled and running
      ansible.builtin.systemd:
        name: rke2-server
        enabled: true
        state: restarted
        daemon_reload: true

    - name: Wait for node-token
      ansible.builtin.wait_for:
        path: /var/lib/rancher/rke2/server/node-token

    - name: Wait for kubectl binary
      ansible.builtin.wait_for:
        path: /var/lib/rancher/rke2/bin/kubectl

    - name: Copy kubectl to user bin
      ansible.builtin.copy:
        src: /var/lib/rancher/rke2/bin/kubectl
        dest: /usr/local/bin/kubectl
        mode: "0755"
        remote_src: true
      become: true

    - name: Read RKE2 server token
      ansible.builtin.slurp:
        src: /var/lib/rancher/rke2/server/token
      register: rke2_token
      become: true
      run_once: true

    - name: Save server token
      ansible.builtin.set_fact:
        token: "{{ rke2_token.content | b64decode | regex_replace('\n', '') }}"

    - name: Ensure .kube directory exists in user's home
      ansible.builtin.file:
        path: "/home/{{ ansible_user }}/.kube"
        state: directory
        mode: "0755"
      become: true

    - name: Copy config file to user home directory
      ansible.builtin.copy:
        src: /etc/rancher/rke2/rke2.yaml
        dest: "/home/{{ ansible_user }}/.kube/config"
        remote_src: true
        owner: "{{ ansible_user }}"
        mode: "u=rw,g=,o="

    - name: Replace IP address with server1
      ansible.builtin.replace:
        path: /home/{{ ansible_user }}/.kube/config
        regexp: "127.0.0.1"
        replace: "{{ hostvars[groups['controllers'][0]].ansible_host }}"
