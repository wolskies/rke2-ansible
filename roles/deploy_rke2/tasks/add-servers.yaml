# SPDX-License-Identifier: GPL-3.0-or-later
---
- name: Deploy RKE2 server Configuration
  ansible.builtin.template:
    src: templates/rke2-server-config2.j2
    dest: /etc/rancher/rke2/config.yaml
    owner: root
    group: root
    mode: '0644'
  when: inventory_hostname != groups['controllers'][0]

- name: Create systemd service file for RKE2 server
  ansible.builtin.template:
    src: templates/rke2-server.service.j2
    dest: /etc/systemd/system/rke2-server.service
    owner: root
    group: root
    mode: '0644'
  when: inventory_hostname != groups['controllers'][0]

- name: Wait for cluster API to be ready
  ansible.builtin.command:
    cmd: "kubectl get nodes"
  register: kubectl_output
  until: "'connection refused' not in kubectl_output.stderr"
  retries: 120
  delay: 10
  changed_when: true
  become: true
  become_user: "{{ ansible_user | default(ansible_user_id) }}"
  when: inventory_hostname == groups['controllers'][0]

- name: Apply kube vip configuration file
  ansible.builtin.command:
    cmd: kubectl --kubeconfig /etc/rancher/rke2/rke2.yaml apply -f https://kube-vip.io/manifests/rbac.yaml
  changed_when: true
  when: inventory_hostname == groups['controllers'][0]

- name: Apply kube vip configuration file
  ansible.builtin.command:
    cmd: >
      kubectl --kubeconfig /etc/rancher/rke2/rke2.yaml apply -f
      https: //raw.githubusercontent.com/kube-vip/kube-vip-cloud-provider/main/manifest/kube-vip-cloud-controller.yaml
  changed_when: true
  when: inventory_hostname == groups['controllers'][0]

- name: Ensure additional RKE2 controllers are enabled and running
  ansible.builtin.systemd:
    name: rke2-server
    enabled: true
    state: restarted
    daemon_reload: true
  when: inventory_hostname != groups['controllers'][0]
