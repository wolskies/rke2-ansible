{
  "version": "2.0.0",
  "tasks": [
    {
      "label": "Activate Virtual Environment",
      "type": "shell",
      "command": "source .venv/bin/activate",
      "group": "build",
      "presentation": {
        "echo": true,
        "reveal": "always",
        "focus": false,
        "panel": "shared"
      },
      "problemMatcher": []
    },
    {
      "label": "Install Dependencies",
      "type": "shell",
      "command": "source .venv/bin/activate && uv pip install -r test-requirements.txt",
      "group": "build",
      "presentation": {
        "echo": true,
        "reveal": "always",
        "focus": false,
        "panel": "shared"
      },
      "dependsOn": "Activate Virtual Environment",
      "problemMatcher": []
    },
    {
      "label": "Ansible Lint",
      "type": "shell",
      "command": "source .venv/bin/activate && ansible-lint",
      "group": "test",
      "presentation": {
        "echo": true,
        "reveal": "always",
        "focus": false,
        "panel": "shared"
      },
      "problemMatcher": {
        "owner": "ansible-lint",
        "fileLocation": ["relative", "${workspaceFolder}"],
        "pattern": {
          "regexp": "^(.*):(\\d+):(\\d+): \\[(\\w+)\\] (.*)$",
          "file": 1,
          "line": 2,
          "column": 3,
          "severity": 4,
          "message": 5
        }
      }
    },
    {
      "label": "YAML Lint",
      "type": "shell",
      "command": "source .venv/bin/activate && yamllint -c .yamllint.yml .",
      "group": "test",
      "presentation": {
        "echo": true,
        "reveal": "always",
        "focus": false,
        "panel": "shared"
      },
      "problemMatcher": {
        "owner": "yamllint",
        "fileLocation": ["relative", "${workspaceFolder}"],
        "pattern": {
          "regexp": "^(.*):(\\d+):(\\d+): \\[(\\w+)\\] (.*)$",
          "file": 1,
          "line": 2,
          "column": 3,
          "severity": 4,
          "message": 5
        }
      }
    },
    {
      "label": "Syntax Check All Roles",
      "type": "shell",
      "command": "source .venv/bin/activate && make test-syntax",
      "group": "test",
      "presentation": {
        "echo": true,
        "reveal": "always",
        "focus": false,
        "panel": "shared"
      },
      "problemMatcher": []
    },
    {
      "label": "Run Unit Tests",
      "type": "shell",
      "command": "source .venv/bin/activate && python3 -c \"from tests.unit.test_basic import test_basic; test_basic(); print('Unit tests passed!')\"",
      "group": "test",
      "presentation": {
        "echo": true,
        "reveal": "always",
        "focus": false,
        "panel": "shared"
      },
      "problemMatcher": []
    },
    {
      "label": "Build Collection",
      "type": "shell",
      "command": "source .venv/bin/activate && ansible-galaxy collection build --force",
      "group": "build",
      "presentation": {
        "echo": true,
        "reveal": "always",
        "focus": false,
        "panel": "shared"
      },
      "problemMatcher": []
    },
    {
      "label": "Install Collection Locally",
      "type": "shell",
      "command": "source .venv/bin/activate && make install-local",
      "group": "build",
      "presentation": {
        "echo": true,
        "reveal": "always",
        "focus": false,
        "panel": "shared"
      },
      "dependsOn": "Build Collection",
      "problemMatcher": []
    },
    {
      "label": "Quick Test (Syntax + Build)",
      "type": "shell",
      "command": "source .venv/bin/activate && make quick-test",
      "group": "test",
      "presentation": {
        "echo": true,
        "reveal": "always",
        "focus": false,
        "panel": "shared"
      },
      "problemMatcher": []
    },
    {
      "label": "Clean Artifacts",
      "type": "shell",
      "command": "source .venv/bin/activate && make clean",
      "group": "build",
      "presentation": {
        "echo": true,
        "reveal": "always",
        "focus": false,
        "panel": "shared"
      },
      "problemMatcher": []
    },
    {
      "label": "Format Python Code",
      "type": "shell",
      "command": "source .venv/bin/activate && black . && isort .",
      "group": "build",
      "presentation": {
        "echo": true,
        "reveal": "always",
        "focus": false,
        "panel": "shared"
      },
      "problemMatcher": []
    }
  ]
}